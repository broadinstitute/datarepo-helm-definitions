---
create-secret-manager-secret:
  enabled: true
  secrets:
    - secretName: grafana-google-client-secret
      vals:
        - kubeSecretKey: GF_AUTH_GOOGLE_CLIENT_SECRET
          path: secret/dsde/datarepo/perf/clientid-secret.json
          vaultKey: oauthClientSecret

backend-config:
  enabled: true

grafana-gcp-managed-cert:
  enabled: true
  fullnameOverride: grafana-gcp-managed-cert
  domainName: datarepo-grafana.datarepo-integration.broadinstitute.org

prometheus-gcp-managed-cert:
  enabled: true
  fullnameOverride: prometheus-gcp-managed-cert
  domainName: datarepo-prometheus.datarepo-integration.broadinstitute.org

kube-prometheus-stack:
  enabled: true
  prometheusOperator:
    tlsProxy:
      enabled: false
    admissionWebhooks:
      enabled: false
    createCustomResource: "false"
  prometheus:
    serviceAccount:
      annotations:
        iam.gke.io/gcp-service-account: prometheus-sa@terra-datarepo-perf.iam.gserviceaccount.com      # workloadID annotation for sidecar to write to stackdriver
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.global-static-ip-name: datarepo-prometheus-ip
        kubernetes.io/ingress.allow-http: "false"
        networking.gke.io/managed-certificates: "prometheus-gcp-managed-cert"
      hosts:
        - datarepo-prometheus.datarepo-integration.broadinstitute.org
      paths:
        - /*
      tls:
        - hosts:
            - datarepo-prometheus.datarepo-integration.broadinstitute.org
    service:
      annotations:
        cloud.google.com/backend-config: '{"ports": {"9090": "datarepomonitoring-backend-config"}}'
      type: NodePort
    prometheusSpec:
      externalUrl: https://datarepo-prometheus.datarepo-integration.broadinstitute.org
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: {}
      serviceMonitorNamespaceSelector: {}
      podMonitorSelectorNilUsesHelmValues: false
      podMonitorSelector: {}
      podMonitorNamespaceSelector: {}
      containers:
        - name: stackdriver-exporter
          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.0
          imagePullPolicy: Always
          args:
            - --stackdriver.project-id=terra-datarepo-perf      # project-id
            - --prometheus.wal-directory=prometheus/wal
            - --stackdriver.kubernetes.location=us-central1     # region
            - --stackdriver.kubernetes.cluster-name=jade-master-us-central1    # clustername
            - --include={sd_export!="false",__name__!~"container_.*|scrape_.*|node_.*|prober_.*|instance:.*|code_.*|mixin_.*|cluster_.*",__name__=~".+"}
            - --include={__name__=~"kube_node_status_condition"} # Used for cluster health alert
          ports:
            - name: stackdriver-exp
              containerPort: 9091
          volumeMounts:
            - name: prometheus-datarepomonitoring-kube-pr-prometheus-db       #  in deployment yaml changes with helm deploy
              mountPath: /prometheus
  grafana:
    rbac:
      create: true
      pspEnabled: true
    plugins: ["doitintl-bigquery-datasource"]
    env:
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Editor"
      GF_AUTH_GOOGLE_ENABLED: "true"
      GF_AUTH_GOOGLE_ALLOW_SIGN_UP: "true"
      GF_AUTH_GOOGLE_CLIENT_ID: "970791974390-1581mjhtp2b3jmg4avhor1vabs13b7ur.apps.googleusercontent.com"
      GF_AUTH_GOOGLE_SCOPES: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
      GF_AUTH_GOOGLE_AUTH_URL: "https://accounts.google.com/o/oauth2/auth"
      GF_AUTH_GOOGLE_AUTH_TOKEN: "https://accounts.google.com/o/oauth2/token"
      GF_AUTH_GOOGLE_API_URL: "https://www.googleapis.com/oauth2/v1/userinfo"
      GF_AUTH_GOOGLE_ALLOWED_DOMAINS: "broadinstitute.org verily.com"
      GF_SERVER_DOMAIN: "datarepo-grafana.datarepo-integration.broadinstitute.org"
      GF_SERVER_ROOT_URL: "https://datarepo-grafana.datarepo-integration.broadinstitute.org"
    envFromSecret: "grafana-google-client-secret"
    service:
      annotations:
        cloud.google.com/backend-config: '{"ports": {"80":"datarepomonitoring-backend-config"}}'
      type: NodePort
    ingress:
      enabled: true
      path: /*
      hosts:
        - datarepo-grafana.datarepo-integration.broadinstitute.org
      annotations:
        kubernetes.io/ingress.global-static-ip-name: grafana-k8-100
        kubernetes.io/ingress.allow-http: "false"
        networking.gke.io/managed-certificates: "grafana-gcp-managed-cert"
      tls:
        - hosts:
            - datarepo-grafana.datarepo-integration.broadinstitute.org

---
prometheusOperator:
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false
prometheus:
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: prometheus-sa@terra-datarepo-alpha.iam.gserviceaccount.com      # workloadID annotation for sidecar to write to stackdriver
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.global-static-ip-name: datarepo-prometheus-ip
      kubernetes.io/ingress.allow-http: "false"
      networking.gke.io/managed-certificates: "prometheus-gcp-managed-cert"
    hosts:
      - datarepo-prometheus.alpha.envs-terra.bio
    paths:
      - /*
  service:
    annotations:
      cloud.google.com/backend-config: '{"ports": {"9090": "datarepomonitoring-backend-config"}}'
    type: NodePort
  prometheusSpec:
    externalUrl: https://datarepo-prometheus.alpha.envs-terra.bio
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    additionalScrapeConfigs:
      - job_name: 'spring-actuator'
        scrape_interval: 5s
        metrics_path: '/actuator/prometheus'
        kubernetes_sd_configs:
          - role: pod
            selectors:
              - role: "pod"
                label: "app.kubernetes.io/name=datarepo-api"
    containers:
      - name: stackdriver-exporter
        image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.8.0
        imagePullPolicy: Always
        args:
          - --stackdriver.project-id=terra-datarepo-alpha      # project-id
          - --prometheus.wal-directory=prometheus/wal
          - --stackdriver.kubernetes.location=us-central1     # region
          - --stackdriver.kubernetes.cluster-name=jade-master-us-central1    # clustername
          - --include={sd_export!="false",__name__!~"container_.*|scrape_.*|node_.*|prober_.*|instance:.*|code_.*|mixin_.*|cluster_.*",__name__=~".+"}
          - --include={__name__=~"kube_node_status_condition"} # Used for cluster health alert
        ports:
          - name: stackdriver-exp
            containerPort: 9091
        volumeMounts:
          - name: prometheus-datarepomonitoring-kube-pr-prometheus-db       #  in deployment yaml changes with helm deploy
            mountPath: /prometheus
grafana:
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      jvm-dashboard:
        url: https://raw.githubusercontent.com/broadinstitute/datarepo-helm-definitions/add-grafana-dashboard/perf/datarepomonitoring/dashboards/prometheus-metrics.json
  rbac:
    create: true
    pspEnabled: true
  plugins: ["doitintl-bigquery-datasource"]
  env:
    GF_USERS_AUTO_ASSIGN_ORG_ROLE: "Editor"
    GF_AUTH_GOOGLE_ENABLED: "true"
    GF_AUTH_GOOGLE_ALLOW_SIGN_UP: "true"
    GF_AUTH_GOOGLE_CLIENT_ID: "970791974390-1581mjhtp2b3jmg4avhor1vabs13b7ur.apps.googleusercontent.com"
    GF_AUTH_GOOGLE_SCOPES: "https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    GF_AUTH_GOOGLE_AUTH_URL: "https://accounts.google.com/o/oauth2/auth"
    GF_AUTH_GOOGLE_AUTH_TOKEN: "https://accounts.google.com/o/oauth2/token"
    GF_AUTH_GOOGLE_API_URL: "https://www.googleapis.com/oauth2/v1/userinfo"
    GF_AUTH_GOOGLE_ALLOWED_DOMAINS: "broadinstitute.org verily.com"
    GF_SERVER_DOMAIN: "datarepo-grafana.alpha.envs-terra.bio"
    GF_SERVER_ROOT_URL: "https://datarepo-grafana.alpha.envs-terra.bio"
  envFromSecret: "grafana-google-client-secret"
  service:
    annotations:
      cloud.google.com/backend-config: '{"ports": {"80":"datarepomonitoring-backend-config"}}'
    type: NodePort
  ingress:
    enabled: true
    path: /*
    hosts:
      - datarepo-grafana.alpha.envs-terra.bio
    annotations:
      kubernetes.io/ingress.global-static-ip-name: datarepo-grafana-ip
      kubernetes.io/ingress.allow-http: "false"
      networking.gke.io/managed-certificates: "grafana-gcp-managed-cert"
